/**
 * Bambda Script to Detect and Highlight Potential Credit Card Information
 * @author Tur24Tur / BugBountyzip (https://github.com/BugBountyzip)
 * It identifies potential credit card information in HTTP responses.
 * Upon detection, responses are highlighted in red and notes are appended, if enabled.
 **/

boolean enableManualAnnotations = true;

// Ensure there is a response
if (!requestResponse.hasResponse()) {
    return false;
}

String responseBody = requestResponse.response().bodyToString();
boolean foundCreditCardInfo = false;
StringBuilder notesBuilder = new StringBuilder();

// Regular expressions to match common credit card formats
String visaRegex = "\\b4[0-9]{12}(?:[0-9]{3})?\\b";
String masterCardRegex = "\\b5[1-5][0-9]{14}\\b";
String discoverRegex = "\\b6(?:011|5[0-9]{2})[0-9]{12}\\b";
String amexRegex = "\\b3[47][0-9]{13}\\b";
String dinersClubRegex = "\\b3(?:0[0-5]|[68][0-9])[0-9]{11}\\b";
String jcbRegex = "\\b(?:2131|1800|35\\d{3})\\d{11}\\b";

Map<String, String> cardTypes = new HashMap<>();
cardTypes.put("Visa", visaRegex);
cardTypes.put("MasterCard", masterCardRegex);
cardTypes.put("Discover", discoverRegex);
cardTypes.put("American Express", amexRegex);
cardTypes.put("Diners Club", dinersClubRegex);
cardTypes.put("JCB", jcbRegex);

for (Map.Entry<String, String> entry : cardTypes.entrySet()) {
    Pattern pattern = Pattern.compile(entry.getValue());
    Matcher matcher = pattern.matcher(responseBody);
    if (matcher.find()) {
        foundCreditCardInfo = true;
        if (enableManualAnnotations) {
            if (notesBuilder.length() > 0) {
                notesBuilder.append(", ");
            }
            notesBuilder.append("Potential ").append(entry.getKey()).append(": ").append(matcher.group());
        }
    }
}

if (foundCreditCardInfo && enableManualAnnotations) {
    requestResponse.annotations().setHighlightColor(HighlightColor.RED);
    if (notesBuilder.length() > 0) {
        requestResponse.annotations().setNotes(notesBuilder.toString());
    }
}

return foundCreditCardInfo;
